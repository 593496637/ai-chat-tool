name: Deploy to Cloudflare

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # 部署Cloudflare Workers (后端API)
  deploy-workers:
    runs-on: ubuntu-latest
    name: Deploy Workers API
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
        env:
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}

  # 构建测试
  test:
    runs-on: ubuntu-latest
    name: Build Test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Check build output
        run: |
          echo "✅ Build completed successfully"
          ls -la dist/

  # 部署Cloudflare Pages (前端)
  deploy-pages:
    runs-on: ubuntu-latest
    name: Deploy Frontend to Pages
    needs: [deploy-workers, test]  # 等待Workers部署和测试完成
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ai-chat-frontend
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}